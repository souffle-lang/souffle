# Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
#
# The Universal Permissive License (UPL), Version 1.0
#
# Subject to the condition set forth below, permission is hereby granted to any person obtaining a copy of this software,
# associated documentation and/or data (collectively the "Software"), free of charge and under any and all copyright rights in the 
# Software, and any and all patent rights owned or freely licensable by each licensor hereunder covering either (i) the unmodified 
# Software as contributed to or provided by such licensor, or (ii) the Larger Works (as defined below), to deal in both
# 
# (a) the Software, and
# (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if one is included with the Software (each a “Larger
# Work” to which the Software is contributed by such licensors),
#
# without restriction, including without limitation the rights to copy, create derivative works of, display, perform, and 
# distribute the Software and make, use, sell, offer for sale, import, export, have made, and have sold the Software and the 
# Larger Work(s), and to sublicense the foregoing rights on either these or other terms.
#
# This license is subject to the following condition:
# The above copyright notice and either this complete permission notice or at a minimum a reference to the UPL must be included in 
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

NEGATIVE_TEST([attrib_dupl],[semantic])
NEGATIVE_TEST([fact_arity],[semantic])
NEGATIVE_TEST([fact_cat],[semantic])
NEGATIVE_TEST([fact_ctr],[semantic])
NEGATIVE_TEST([fact_empty],[semantic])
NEGATIVE_TEST([fact_number],[semantic])
NEGATIVE_TEST([fact_number2],[semantic])
NEGATIVE_TEST([fact_plus],[semantic])
NEGATIVE_TEST([fact_variable],[semantic])
NEGATIVE_TEST([number_constants],[semantic])
NEGATIVE_TEST([record_null],[semantic])
NEGATIVE_TEST([rel_dupl],[semantic])
NEGATIVE_TEST([rel_empty],[semantic])
NEGATIVE_TEST([rel_udef],[semantic])
NEGATIVE_TEST([rel_record],[semantic])
NEGATIVE_TEST([rel_stratification],[semantic])
NEGATIVE_TEST([rel_stratification2],[semantic])
NEGATIVE_TEST([rule_arity],[semantic])
NEGATIVE_TEST([rule_grounded],[semantic])
NEGATIVE_TEST([rule_typecompat],[semantic])
NEGATIVE_TEST([rule_undeclared_relation],[semantic])
NEGATIVE_TEST([rule_undeclared_relation2],[semantic])
NEGATIVE_TEST([type_dupl],[semantic])
NEGATIVE_TEST([type_udef],[semantic])
NEGATIVE_TEST([underscore],[semantic])
NEGATIVE_TEST([execution_plan],[semantic])
NEGATIVE_TEST([comp_name_resolution],[semantic])
NEGATIVE_TEST([comp_clauses],[semantic])
NEGATIVE_TEST([comp_relation],[semantic])
NEGATIVE_TEST([agg_checks],[semantic])
NEGATIVE_TEST([agg_checks2],[semantic])
NEGATIVE_TEST([var_single],[semantic])
NEGATIVE_TEST([plan1],[semantic])
NEGATIVE_TEST([plan2],[semantic])
NEGATIVE_TEST([comp_nonexistent_type],[semantic])
NEGATIVE_TEST([comp_params_inheritance],[semantic])
NEGATIVE_TEST([comp_override],[semantic])
NEGATIVE_TEST([comp_infinite_recursion],[semantic])
NEGATIVE_TEST([comp_type1],[semantic])
POSITIVE_TEST([comp_type2],[semantic])
POSITIVE_TEST([comp_type3],[semantic])
POSITIVE_TEST([lrg_attr_id],[semantic])
POSITIVE_TEST([lrg_rel_id1],[semantic])
POSITIVE_TEST([lrg_rel_id2],[semantic])
