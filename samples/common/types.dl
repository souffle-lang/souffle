//
// Copyright (c) 2013-16, Oracle and/or its affiliates.
//
// The Universal Permissive License (UPL), Version 1.0
// 
// Subject to the condition set forth below, permission is hereby granted to any person obtaining a copy of this software,
// associated documentation and/or data (collectively the "Software"), free of charge and under any and all copyright rights in the 
// Software, and any and all patent rights owned or freely licensable by each licensor hereunder covering either (i) the unmodified 
// Software as contributed to or provided by such licensor, or (ii) the Larger Works (as defined below), to deal in both
// 
// (a) the Software, and
// (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if one is included with the Software (each a “Larger
// Work” to which the Software is contributed by such licensors),
// 
// without restriction, including without limitation the rights to copy, create derivative works of, display, perform, and 
// distribute the Software and make, use, sell, offer for sale, import, export, have made, and have sold the Software and the 
// Larger Work(s), and to sublicense the foregoing rights on either these or other terms.
// 
// This license is subject to the following condition:
// The above copyright notice and either this complete permission notice or at a minimum a reference to the UPL must be included in 
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
// IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// Modeled after the specs in the DOOP framework (http://doop.program-analysis.org/)

// Copyright (C) 2008-2009  Martin Bravenboer
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
// 
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

/*****************************************************************

 Compiled-Time Types used for context-sensitive points-to

******************************************************************/

//
//

.type String

.type ArrayType = String
.type BasicBlockRef = String
.type ClassConstant = String
.type ClassType = String
.type FieldSignatureRef = String
.type File = String
.type InterfaceType = String
.type VarRef = String
.type MethodDescriptorRef = String
.type MethodInvocationRef = String
.type MethodSignatureRef = String
.type ModifierRef = String
.type NullType = String
.type PrimitiveType = String
.type SimpleNameRef = String
.type StringConstant = String

.type ParamIndexRef = number

.type HeapAllocationRef = StringConstant | ClassConstant
.type InstructionRef = CallGraphEdgeSourceRef
.type ReferenceType = ArrayType | ClassType | InterfaceType
.type CallGraphEdgeSourceRef = HeapAllocationRef | MethodInvocationRef
.type Type = PrimitiveType | ReferenceType | NullType

.type Context = [obj1:HeapAllocationRef,obj2:HeapAllocationRef]
.type SigCtxHeap = [sig:FieldSignatureRef,basectx:Context,baseheap:HeapAllocationRef]

.type Int = number

// HACK: TODO this is necessary for traces, Souffle would not 
// allow to have this in ci-trace.dl Need to investigate why...
.type EmptyAllocationRef
.type BaseHeapAllocationRef = EmptyAllocationRef|HeapAllocationRef
